name: Deploy

on:
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch:

jobs:
  sync-branches:
    name: Pull Request to deploy branch
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Config git
        run: |
          git config --global user.name "auto-deployer"
          git config --global user.email "rirusha@noreply.github.com"

      - name: Checkout branch
        run: git checkout devel-slice
      
      - name: Rebase branch
        # Должна существовать только одна ветка dev-*
        run: |
          git branch --list "dev-*" | grep "dev-" | while read -r branch; do git rebase --strategy=ours "$branch"; done

      - name: Push changes
        run: |
          git push --force origin devel-slice 

  flatter:
    name: Flatter
    runs-on: ubuntu-latest
    needs: sync-branches
    container:
      image: ghcr.io/andyholmes/flatter/gnome:master
      options: --privileged

    strategy:
      matrix:
        arch: [x86_64]
      fail-fast: false
      max-parallel: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup QEMU
        if: ${{ matrix.arch == 'aarch64' }}
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Setup GPG
        id: gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Build 
        uses: andyholmes/flatter@main
        with:
          files: |
            build-aux/flatpak/io.github.Rirusha.Cassette-Devel.json
          arch: ${{ matrix.arch }}
          gpg-sign: ${{ steps.gpg.outputs.fingerprint }}
          upload-bundles: true
          upload-pages-artifact: true
          upload-pages-includes: |
            default.css
            index.html
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: flatter
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
